{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","App.module.css"],"names":["module","exports","Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","onChange","pattern","title","required","id","style","marginTop","disabled","Component","ContactsList","contacts","onDeleteContact","map","className","s","box","btn","onClick","Filter","label","filterInput","placeholder","App","filter","formList","contact","find","cont","toLocaleLowerCase","includes","formOnSubmitHandler","console","log","alert","deleteContact","contactId","prevState","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizeContacts","visibleContacts","css","ContactForm","contactBox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dd3a65e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__3Nqk0\",\"box\":\"ContactList_box__uavSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__-LfHX\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass Form extends Component {\n    state = {\n        name: '',\n        number: ''\n    };\n\n    nameInputId = shortid.generate();\n    numberInputId = shortid.generate();\n\n        handleChange = e => {\n        const {name, value} = e.currentTarget\n          this.setState({ [name]: value })\n          \n    };\n  \n        handleSubmit = e => {\n        e.preventDefault();\n          this.props.onSubmit(this.state);\n          this.reset();\n          \n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n  \n  render() {\n    \n        return (\n            <form onSubmit = {this.handleSubmit} >\n                <label htmlFor={this.nameInputId} >            \n                    Name <br/><input\n                            type=\"text\"\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                            name=\"name\"                     \n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                                required\n                                id={this.nameInputId}\n                            />\n                            \n                </label>\n                    <br/>\n                <label htmlFor={this.numberInputId}>\n                    Number <br/><input\n                            type=\"tel\"\n                            name=\"number\"\n                            value={this.state.number}\n                            onChange={this.handleChange}\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                            required\n                            id={this.numberInputId}\n                          />\n          </label>\n          <div style ={{marginTop: \"10px\"}}>\n                    <button type=\"submit\" disabled= {!this.state.name || !this.state.number}>add contact</button>\n          </div>\n        </form>\n        );\n    }\n}\n\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul  >\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.box}>\r\n          <p >            \r\n            {name}: {number}\r\n              </p>\r\n              \r\n          <button            \r\n            type=\"button\" className={s.btn}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};","  \nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n     <input\n      className={s.filterInput}\n      placeholder=\"Find contacts by name\"\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n","\nimport React, { Component } from 'react';\nimport css from \"./App.module.css\";\nimport shortid from 'shortid';\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactsList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n  contacts: [],\n  filter: '', \n  }\n\nformList = (contact, contacts) =>\n    contacts.find(cont =>\n      cont.name.toLocaleLowerCase().includes(contact.name.toLocaleLowerCase()),\n    );\n  formOnSubmitHandler = e => {    \n    const { contacts } = this.state;\n    console.log({ contacts });\n    const contact = {\n      id: shortid(),\n      name: e.name,\n      number: e.number,\n    };\n    this.formList(contact, contacts)\n      ? alert(`${contact.name} is already in your list`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(cont => cont.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')    \n    const parsedContacts = JSON.parse(contacts)\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }    \n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n      };\n  };\n  \n  render() {\n    const normalizeContacts = this.state.filter.toLocaleLowerCase();\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizeContacts),\n    );\n    const { filter } = this.state;\n    return (\n     \n      <div>\n        <div className={css.App}>          \n          <h1>Phonebook</h1>\n\n          <ContactForm onSubmit={this.formOnSubmitHandler} />\n          </div>\n        <div className={css.contactBox}>\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter}/>\n          <ContactsList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n          </div>\n        </div>\n                     \n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2T6yf\",\"contactBox\":\"App_contactBox__3VhIY\"};"],"sourceRoot":""}